{"version":3,"sources":["TabPanel/index.js","urls.js","Characters/card.js","Characters/index.js","Common/pagination.js","utils.js","Episodes/index.js","Locations/index.js","MyWatchlist/index.js","App.js","reportWebVitals.js","index.js"],"names":["TabPanel","BASE_URL","API_URLS","useStyles","makeStyles","root","maxWidth","media","height","CharacterCard","character","classes","Card","className","CardActionArea","CardMedia","image","title","name","CardContent","Typography","gutterBottom","variant","component","color","species","status","CardActions","Button","size","Characters","useState","setError","setIsLoaded","items","setItems","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","React","setStatus","gender","setGender","setSpecies","useEffect","params","URLSearchParams","fetch","toString","then","res","json","result","results","error","class","noValidate","autoComplete","FormControl","InputLabel","id","Select","labelId","value","onChange","event","target","MenuItem","TextField","label","length","map","item","PaginationControlled","pages","page","url","history","useHistory","Stack","Pagination","count","currentUrl","push","getItems","list","Object","keys","localStorage","key","getItem","removeItem","Episodes","info","setInfo","Set","favorites","setFavorites","location","useLocation","setName","setPage","URL","a","urlParams","search","_page","parseInt","get","_name","response","Input","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","TableContainer","Paper","Table","table","TableHead","TableRow","TableCell","align","TableBody","scope","air_date","episode","has","String","filtered","filter","x","newFilteredFavorites","setItem","newFavorites","Locations","searchValue","setSeachValue","param","setParam","type","dimension","CheckboxList","itemsList","setItemsList","List","sx","width","bgcolor","ListItem","secondaryAction","edge","disablePadding","ListItemIcon","ListItemText","primary","a11yProps","index","App","pathIndex","indexOf","pathname","AppBar","Tabs","Tab","Link","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c26706b5.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles, Theme } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport PropTypes from 'prop-types'\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  )\n}\n\nexport default TabPanel\n","const BASE_URL = 'https://rickandmortyapi.com/api'\n\nexport const API_URLS = {\n  CHARACTER: BASE_URL + '/character',\n  LOCATION: BASE_URL + '/location',\n  EPISODE: BASE_URL + '/episode',\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\nconst useStyles = makeStyles({\n  root: {\n    /* maxWidth: 345, */\n    maxWidth: 200,\n  },\n  media: {\n    /* height: 140, */\n    height: 300,\n  },\n})\n\nexport default function CharacterCard({ character }) {\n  const classes = useStyles()\n\n  //console.log('character:')\n  //console.log(character)\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={character.image}\n          title={character.name}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {character.name}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {character.species}\n            {character.status}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Learn More\n        </Button>\n      </CardActions>\n    </Card>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport '../App.css'\nimport { API_URLS } from '../urls'\nimport CharacterCard from './card'\nimport { makeStyles, withTheme } from '@material-ui/core/styles'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport TextField from '@material-ui/core/TextField'\n\nfunction Characters() {\n  const [error, setError] = useState(null)\n  const [isLoaded, setIsLoaded] = useState(false)\n  const [items, setItems] = useState([])\n  const useStyles = makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }))\n  const classes = useStyles()\n  const [status, setStatus] = React.useState('')\n  const [gender, setGender] = React.useState('')\n  const [species, setSpecies] = React.useState('')\n\n  const handleChangeStatus = (event) => {\n    setStatus(event.target.value)\n  }\n\n  const handleChangeGender = (event) => {\n    setGender(event.target.value)\n  }\n\n  const handleChangeSpecies = (event) => {\n    setSpecies(event.target.value)\n  }\n\n  useEffect(() => {\n    const params = new URLSearchParams({\n      status: status,\n      gender: gender,\n      species: species,\n    })\n\n    fetch(API_URLS.CHARACTER + '?' + params.toString())\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true)\n          setItems(result.results)\n        },\n        (error) => {\n          setIsLoaded(true)\n          setError(error)\n        }\n      )\n  }, [status, gender, species])\n\n  return (\n    <>\n      <div class=\"characters-body\">\n        <div class=\"filter-container char\">\n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\n              <Select\n                labelId=\"status-label\"\n                id=\"status-select\"\n                value={status}\n                onChange={handleChangeStatus}\n              >\n                <MenuItem value={'Alive'}>Alive</MenuItem>\n                <MenuItem value={'Dead'}>Dead</MenuItem>\n                <MenuItem value={'unknown'}>unknown</MenuItem>\n              </Select>\n            </FormControl>\n\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"gender-label\">Gender</InputLabel>\n              <Select\n                labelId=\"gender-label\"\n                id=\"gender-select\"\n                value={gender}\n                onChange={handleChangeGender}\n              >\n                <MenuItem value={'Female'}>Female</MenuItem>\n                <MenuItem value={'Male'}>Male</MenuItem>\n                <MenuItem value={'Genderless'}>Genderless</MenuItem>\n                <MenuItem value={'unknown'}>unknown</MenuItem>\n              </Select>\n            </FormControl>\n\n            <TextField\n              id=\"species-id\"\n              label=\"Species\"\n              value={species}\n              onChange={handleChangeSpecies}\n            />\n          </form>\n        </div>\n\n        {!items ? <div>No results</div> : null}\n        {items && !items.length ? <div>Загрузка...</div> : null}\n        {items && items.length ? (\n          <div class=\"cardsstyle\">\n            {items.map((item) => (\n              <CharacterCard character={item} />\n            ))}\n          </div>\n        ) : null}\n      </div>\n    </>\n  )\n}\n\nexport default Characters\n","import * as React from 'react'\nimport '../App.css'\nimport Pagination from '@mui/material/Pagination'\nimport Stack from '@mui/material/Stack'\nimport { useHistory } from 'react-router-dom'\n\nexport default function PaginationControlled({ pages, page, name, url }) {\n  let history = useHistory()\n  const handleChange = (event, value) => {\n    let currentUrl = url + '?page=' + value + (name ? '&name=' + name : '')\n    history.push(currentUrl)\n  }\n\n  return (\n    <Stack spacing={2}>\n      <Pagination count={pages} page={page} onChange={handleChange} />\n    </Stack>\n  )\n}\n","function setItem(id, name) {\n  localStorage.setItem(id, name)\n}\n\nfunction getItems() {\n  let keys = Object.keys(localStorage)\n  let list = []\n  for (let key of keys) {\n    list.push({ id: key, name: localStorage.getItem(key) })\n    //console.log(`${key}: ${localStorage.getItem(key)}`)\n  }\n  return list\n}\n\nfunction removeItem(id) {\n  localStorage.removeItem(id)\n}\n\nfunction getIsFavoriteItem(id) {\n  return Boolean(localStorage.getItem(id))\n}\n\nfunction getFavorites() {\n  return new Set(Object.keys(localStorage))\n}\n\nexport { setItem, getItems, removeItem, getFavorites }\n","import React, { useEffect, useState } from 'react'\nimport { useLocation } from 'react-router'\nimport '../App.css'\nimport { API_URLS } from '../urls'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport PaginationControlled from '../Common/pagination'\nimport Button from '@mui/material/Button'\nimport IconButton from '@mui/material/IconButton'\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder'\nimport FavoriteIcon from '@mui/icons-material/Favorite'\nimport { useHistory } from 'react-router-dom'\nimport { setItem, getFavorites, removeItem } from '../utils'\nimport ClearIcon from '@mui/icons-material/Clear'\nimport InputAdornment from '@mui/material/InputAdornment'\nimport Input from '@mui/material/Input'\n\nfunction Episodes() {\n  const [error, setError] = useState(null)\n  const [isLoaded, setIsLoaded] = useState(false)\n  const [items, setItems] = useState([])\n  const [info, setInfo] = useState({})\n  const [favorites, setFavorites] = useState(new Set())\n  const location = useLocation()\n  let history = useHistory()\n  const useStyles = makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }))\n  const classes = useStyles()\n  const [name, setName] = React.useState('')\n  const [page, setPage] = React.useState(1)\n  const URL = '/episode'\n\n  useEffect(async () => {\n    setFavorites(getFavorites())\n    const urlParams = new URLSearchParams(location.search)\n    let _page = parseInt(urlParams.get('page')) || 1\n    let _name = urlParams.get('name') || ''\n    setPage(_page)\n    setName(_name)\n\n    const params = new URLSearchParams({\n      name: _name,\n      page: _page,\n    })\n\n    try {\n      const response = await fetch(API_URLS.EPISODE + '?' + params.toString())\n      const result = await response.json()\n      setIsLoaded(true)\n      setItems(result.results)\n      setInfo(result.info)\n    } catch (e) {\n      setIsLoaded(true)\n      setError(e)\n    }\n  }, [location.search])\n\n  const handleChangeName = (event) => {\n    setName(event.target.value)\n  }\n\n  const handleSearchClick = (event) => {\n    let currentUrl = URL + (name ? '?name=' + name : '')\n    history.push(currentUrl)\n  }\n\n  const handleClearSearch = (event) => {\n    let currentUrl = URL\n    setName('')\n    history.push(currentUrl)\n  }\n\n  return (\n    <>\n      <div class=\"filter-container episodes\">\n        <form className={classes.root} noValidate autoComplete=\"off\">\n          <Input\n            id=\"name-id\"\n            label=\"Name\"\n            value={name}\n            onChange={handleChangeName}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                {name ? (\n                  <IconButton\n                    aria-label=\"clear search\"\n                    onClick={handleClearSearch}\n                  >\n                    <ClearIcon />\n                  </IconButton>\n                ) : (\n                  <div class=\"empty-div\" />\n                )}\n              </InputAdornment>\n            }\n          />\n\n          <Button variant=\"contained\" onClick={handleSearchClick}>\n            Search\n          </Button>\n        </form>\n      </div>\n\n      {!items ? <div>No results</div> : null}\n      {items && !items.length ? <div>Загрузка...</div> : null}\n      {items && items.length ? (\n        <div class=\"episodestyle \">\n          <TableContainer component={Paper}>\n            <Table\n              className={classes.table}\n              size=\"small\"\n              aria-label=\"a dense table\"\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell>id</TableCell>\n                  <TableCell align=\"right\">name</TableCell>\n                  <TableCell align=\"right\">air_date</TableCell>\n                  <TableCell align=\"right\">episode</TableCell>\n                  <TableCell>Add to Watchlist</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {items.map((item) => (\n                  <TableRow key={item.name}>\n                    <TableCell align=\"right\">{item.id}</TableCell>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {item.name}\n                    </TableCell>\n                    <TableCell align=\"right\">{item.air_date}</TableCell>\n                    <TableCell align=\"right\">{item.episode}</TableCell>\n                    <TableCell align=\"right\">\n                      <Button\n                        variant=\"text\"\n                        onClick={() => {\n                          if (favorites.has(String(item.id))) {\n                            const filtered = [...favorites].filter(\n                              (x) => x !== String(item.id)\n                            )\n\n                            const newFilteredFavorites = new Set(filtered)\n                            setFavorites(newFilteredFavorites)\n                            removeItem(item.id)\n                          } else {\n                            setItem(item.id, item.name)\n                            const newFavorites = new Set([\n                              ...favorites,\n                              String(item.id),\n                            ])\n                            setFavorites(newFavorites)\n                          }\n                        }}\n                      >\n                        {favorites.has(String(item.id)) ? (\n                          <FavoriteIcon></FavoriteIcon>\n                        ) : (\n                          <FavoriteBorderIcon></FavoriteBorderIcon>\n                        )}\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>\n      ) : null}\n\n      {items && items.length ? (\n        <div>\n          <PaginationControlled\n            pages={info.pages}\n            page={page}\n            name={name}\n            url={URL}\n          />\n        </div>\n      ) : null}\n    </>\n  )\n}\n\nexport default Episodes\n","import React, { useEffect, useState } from 'react'\nimport { useLocation } from 'react-router'\nimport '../App.css'\nimport { API_URLS } from '../urls'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport PaginationControlled from '../Common/pagination'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport Button from '@mui/material/Button'\nimport IconButton from '@mui/material/IconButton'\nimport { useHistory } from 'react-router-dom'\nimport ClearIcon from '@mui/icons-material/Clear'\nimport InputAdornment from '@mui/material/InputAdornment'\nimport Input from '@mui/material/Input'\n\nfunction Locations() {\n  const [error, setError] = useState(null)\n  const [isLoaded, setIsLoaded] = useState(false)\n  const [items, setItems] = useState([])\n  const [info, setInfo] = useState({})\n  const location = useLocation()\n  let history = useHistory()\n  const useStyles = makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }))\n  const classes = useStyles()\n  const page = parseInt(new URLSearchParams(location.search).get('page')) || 1\n  const [searchValue, setSeachValue] = React.useState('')\n  const [param, setParam] = React.useState('name')\n  const URL = '/location'\n\n  const handleChangeSearchValue = (event) => {\n    setSeachValue(event.target.value)\n  }\n\n  const handleChangeParam = (event) => {\n    setParam(event.target.value)\n  }\n\n  const handleSearchClick = (event) => {\n    let currentUrl = URL + (searchValue ? '/?' + param + '=' + searchValue : '')\n    history.push(currentUrl)\n  }\n\n  const handleClearSearch = (event) => {\n    let currentUrl = URL\n    setSeachValue('')\n    history.push(currentUrl)\n  }\n\n  useEffect(async () => {\n    try {\n      const response = await fetch(API_URLS.LOCATION + location.search)\n      const result = await response.json()\n      setIsLoaded(true)\n      setItems(result.results)\n      setInfo(result.info)\n    } catch (e) {\n      setIsLoaded(true)\n      setError(e)\n    }\n  }, [location])\n\n  return (\n    <>\n      <div class=\"filter-container locations\">\n        <form className={classes.root} noValidate autoComplete=\"off\">\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-label\">Param</InputLabel>\n            <Select\n              labelId=\"name-label\"\n              id=\"name-select\"\n              value={param}\n              onChange={handleChangeParam}\n            >\n              <MenuItem value={'name'}>Name</MenuItem>\n              <MenuItem value={'type'}>Type</MenuItem>\n              <MenuItem value={'dimension'}>Dimension</MenuItem>\n            </Select>\n          </FormControl>\n\n          <Input\n            id=\"name-id\"\n            label=\"Name\"\n            value={searchValue}\n            onChange={handleChangeSearchValue}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                {searchValue ? (\n                  <IconButton\n                    aria-label=\"clear search\"\n                    onClick={handleClearSearch}\n                  >\n                    <ClearIcon />\n                  </IconButton>\n                ) : (\n                  <div class=\"empty-div\" />\n                )}\n              </InputAdornment>\n            }\n          />\n\n          <Button variant=\"contained\" onClick={handleSearchClick}>\n            Search\n          </Button>\n        </form>\n      </div>\n\n      {!items ? <div>No results</div> : null}\n      {items && !items.length ? <div>Загрузка...</div> : null}\n      {items && items.length ? (\n        <div class=\"locationstyle\">\n          <TableContainer component={Paper}>\n            <Table\n              className={classes.table}\n              size=\"small\"\n              aria-label=\"a dense table\"\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell>id</TableCell>\n                  <TableCell align=\"right\">name</TableCell>\n                  <TableCell align=\"right\">type</TableCell>\n                  <TableCell align=\"right\">dimension</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {items.map((item) => (\n                  <TableRow key={item.name}>\n                    <TableCell align=\"right\">{item.id}</TableCell>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {item.name}\n                    </TableCell>\n                    <TableCell align=\"right\">{item.type}</TableCell>\n                    <TableCell align=\"right\">{item.dimension}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>\n      ) : null}\n\n      {items && items.length ? (\n        <div>\n          <PaginationControlled\n            pages={info.pages}\n            page={page}\n            url=\"/location\"\n          />\n        </div>\n      ) : null}\n    </>\n  )\n}\n\nexport default Locations\n","import React, { useEffect, useState } from 'react'\nimport List from '@mui/material/List'\nimport ListItem from '@mui/material/ListItem'\nimport ListItemButton from '@mui/material/ListItemButton'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport ListItemText from '@mui/material/ListItemText'\nimport Checkbox from '@mui/material/Checkbox'\nimport IconButton from '@mui/material/IconButton'\nimport CommentIcon from '@mui/icons-material/Comment'\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline'\nimport ClearIcon from '@mui/icons-material/Clear'\nimport { getItems, removeItem } from '../utils'\n\nexport default function CheckboxList() {\n  //const [checked, setChecked] = useState([0])\n  const [itemsList, setItemsList] = useState([])\n\n  useEffect(() => {\n    setItemsList(getItems())\n  }, [])\n\n  const handleRemoveItem = (id) => {\n    removeItem(id)\n    setItemsList(getItems())\n  }\n\n  return (\n    <List\n      sx={{\n        width: '100%',\n        maxWidth: 600,\n        bgcolor: 'background.paper',\n        color: 'black',\n      }}\n    >\n      {itemsList.map((value) => {\n        const labelId = `checkbox-list-label-${value}`\n\n        return (\n          <ListItem\n            key={value.id}\n            secondaryAction={\n              <IconButton\n                edge=\"end\"\n                aria-label=\"comments\"\n                onClick={() => handleRemoveItem(value.id)}\n              >\n                <ClearIcon />\n              </IconButton>\n            }\n            disablePadding\n          >\n            <ListItemIcon></ListItemIcon>\n            <ListItemText id={labelId} primary={value.name} />\n          </ListItem>\n        )\n      })}\n    </List>\n  )\n}\n","import React from 'react'\nimport './App.css'\nimport AppBar from '@material-ui/core/AppBar'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\n//import NativeSelect from '@material-ui/core/NativeSelect'\nimport TabPanel from './TabPanel'\nimport Characters from './Characters'\nimport Episodes from './Episodes'\nimport Locations from './Locations'\nimport MyWatchlist from './MyWatchlist'\nimport { Route, Link, Switch, useLocation } from 'react-router-dom'\nimport Container from '@mui/material/Container'\n\nfunction App() {\n  const location = useLocation()\n  const pathlist = ['/character', '/episode', '/location', '/watchlist']\n  const pathIndex = pathlist.indexOf(location.pathname)\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <AppBar position=\"static\">\n          <Tabs value={pathIndex} aria-label=\"simple tabs example\">\n            <Tab\n              label=\"Characters\"\n              component={Link}\n              to=\"/character\"\n              {...a11yProps(0)}\n            />\n            <Tab\n              label=\"Episodes\"\n              component={Link}\n              to=\"/episode\"\n              {...a11yProps(1)}\n            />\n            <Tab\n              label=\"Locations\"\n              component={Link}\n              to=\"/location\"\n              {...a11yProps(2)}\n            />\n            <Tab\n              label=\"My watchlist\"\n              component={Link}\n              to=\"/watchlist\"\n              {...a11yProps(3)}\n            />\n          </Tabs>\n        </AppBar>\n      </header>\n      <body className=\"app-body\" maxWidth=\"sm\">\n        <Switch>\n          <Route path=\"/character\">\n            <Characters />\n          </Route>\n          <Route path=\"/episode\">\n            <Episodes />\n          </Route>\n          <Route path=\"/location\">\n            <Locations />\n          </Route>\n          <Route path=\"/watchlist\">\n            <MyWatchlist />\n          </Route>\n        </Switch>\n      </body>\n    </div>\n  )\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}